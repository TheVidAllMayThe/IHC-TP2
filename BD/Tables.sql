CREATE DATABASE Magic;

GO

USE Magic;

GO

CREATE TABLE [User] (
	email VARCHAR(255) NOT NULL,
	[password] TEXT NOT NULL,
	PRIMARY KEY (email)
);

CREATE TABLE Edition (
	[name] VARCHAR(MAX) NOT NULL,
	code VARCHAR(255) NOT NULL,
	legality VARCHAR(MAX) NOT NULL,
	mkm_id INT,
	gathererCode VARCHAR(255),
	releaseDate DATE,
	PRIMARY KEY (code)
);

CREATE TABLE [Card] ( 
	id INTEGER IDENTITY(1,1) NOT NULL,
	[name] VARCHAR(MAX) NOT NULL,
	rarity VARCHAR(255) NOT NULL,
	edition VARCHAR(255),
	artist VARCHAR(MAX),
	imageName VARCHAR(MAX),
	gathererID INT,
	multiverseID INT,
	manaCost VARCHAR(100),
	[text] TEXT,
	cmc INT,
	PRIMARY KEY (id),
	FOREIGN KEY (edition) REFERENCES Edition(code) ON DELETE SET NULL
);

CREATE TABLE Creature(
	[card] INT NOT NULL,
	power INT,
	toughness INT,
	PRIMARY KEY ([card]),
	FOREIGN KEY ([card]) REFERENCES [Card](ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE ColorIdentity(
	[card] INT NOT NULL,
	color VARCHAR(20) NOT NULL,
	isManaColor BIT NOT NULL,
	PRIMARY KEY ([card], color),
	FOREIGN KEY ([card]) REFERENCES [Card](ID) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE SubtypeOfCard(
	card INTEGER NOT NULL,
	subtype VARCHAR(255) NOT NULL,
	PRIMARY KEY (card, subtype),
	FOREIGN KEY (card) REFERENCES Card(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE TypeOfCard(
	card INTEGER NOT NULL,
	type VARCHAR(255) NOT NULL,
	PRIMARY KEY (card, type),
	FOREIGN KEY (card) REFERENCES Card(id)  ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Deck(
	id INTEGER IDENTITY(1,1) NOT NULL,
	[name] VARCHAR(255) NOT NULL,
	creator VARCHAR(255) NOT NULL,
	rating FLOAT,
	UNIQUE(creator, [name]),
	PRIMARY KEY (id),
	FOREIGN KEY (creator) REFERENCES [User](email) 
);

CREATE TABLE CardInDeck(
	[card] INTEGER UNIQUE NOT NULL,
	deck INTEGER NOT NULL,
	amount INTEGER NOT NULL,
	isSideboard BIT NOT NULL,
	PRIMARY KEY (deck, [card]),
	FOREIGN KEY (deck) REFERENCES Deck (id),
	FOREIGN KEY ([card]) REFERENCES [Card] (id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE TagOfDeck(
	deck INTEGER NOT NULL,
	tag VARCHAR(50) NOT NULL,
	PRIMARY KEY (deck, tag),
	FOREIGN KEY (deck) REFERENCES Deck(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE RatedBy(
	deck INT NOT NULL,
	[user] VARCHAR(255) NOT NULL,
	rating FLOAT NOT NULL,
	PRIMARY KEY (deck, [user]),
	FOREIGN KEY (deck) REFERENCES Deck(id) ON UPDATE CASCADE ON DELETE CASCADE, 
	FOREIGN KEY ([user]) REFERENCES [User](email) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Flavor(
	card INTEGER NOT NULL,
	flavor TEXT NOT NULL,
	PRIMARY KEY (card),
	FOREIGN KEY (card) REFERENCES Card(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Ability(
	card INTEGER NOT NULL,
	Ability VARCHAR(255) NOT NULL,
	action BIT NOT NULL,
	PRIMARY KEY (card, Ability),
	FOREIGN KEY (card) REFERENCES Card(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Game(
	ID INT IDENTITY(1,1) NOT NULL,
	Player1 VARCHAR(255) NOT NULL,
	Player2 VARCHAR(255) NOT NULL,
	State VARCHAR(10) DEFAULT 'Ongoing' NOT NULL,
	Turn INT DEFAULT 0 NOT NULL,
	Phase VARCHAR(15) DEFAULT 'Beginning' NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (Player1) REFERENCES [User](email),
	FOREIGN KEY (Player2) REFERENCES [User](email),
);

CREATE TABLE Player(
	[User] VARCHAR(255) NOT NULL,
	Game INT NOT NULL,
	Deck INT NOT NULL,
	Lp TINYINT DEFAULT 20 NOT NULL,
	Pc TINYINT DEFAULT 0 NOT NULL,
	B TINYINT DEFAULT 0 NOT NULL,
	G TINYINT DEFAULT 0 NOT NULL,
	W TINYINT DEFAULT 0 NOT NULL,
	U TINYINT DEFAULT 0 NOT NULL,
	R TINYINT DEFAULT 0 NOT NULL,
	Uncolored TINYINT DEFAULT 0 NOT NULL,
	PRIMARY KEY ([User], Game),
	FOREIGN KEY ([User]) REFERENCES [User](email),
	FOREIGN KEY (Deck) REFERENCES Deck(ID),
	FOREIGN KEY(Game) REFERENCES Game(ID)
);

CREATE TABLE CardInGame(
	ID INT IDENTITY(1,1) NOT NULL,
	Card INTEGER NOT NULL,
	Player VARCHAR(255) NOT NULL,
	Game INT NOT NULL,
	Place VARCHAR(15) DEFAULT 'Pile' NOT NULL,
	Tap BIT DEFAULT 0 NOT NULL;
	Revealed BIT DEFAULT 0 NOT NULL;
	/*Pile, Board, Hand, Graveyard, Exiled*/
	PRIMARY KEY(ID),
	FOREIGN KEY (Card) REFERENCES Card(ID),
	FOREIGN KEY (Player) REFERENCES [User](email),
	FOREIGN KEY (Game) REFERENCES Game(ID)
);

CREATE TABLE ActionHistory(
	ID INT IDENTITY(1,1) NOT NULL,
	CardInGame INT ID NOT NULL,
	Action VARCHAR(255) NOT NULL,
	/*Tap, Untap, Exile, Reveal,From... To Pile, To Hand, To Graveyard, To Exiled, To Board, Revealed*/
	PRIMARY KEY (ID),
	FOREIGN KEY (CardInGame) REFERENCES CardInGame(ID)
);